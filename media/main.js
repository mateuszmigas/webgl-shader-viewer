!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var r="SHADERS",o=function(){return(o=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},i=function(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var r=Array(e),o=0;for(t=0;t<n;t++)for(var i=arguments[t],u=0,a=i.length;u<a;u++,o++)r[o]=i[u];return r},u={emptyItem:!0},a=function(e,t,n){var r=o(o({},u),n),a=document.createElement("select");a.className="dropdown-base "+t;var l=null,c=[],d=function(t){e(l=t)};a.onchange=function(){var e=c.find((function(e){return e.item.id===a.value}));e.item.id?d(e.item):d(null)};return[a,{setItems:function(e){a.innerHTML="",c.length=0,e.find((function(e){return e.id===(null==l?void 0:l.id)}))||d(null),(r.emptyItem?i([{id:"",display:""}],e):i(e)).forEach((function(e){var t=document.createElement("option");t.value=e.id,t.textContent=e.display,t.selected=e.id===(null==l?void 0:l.id),a.appendChild(t),c.push({element:t,item:e})}))},getItems:function(){return c.map((function(e){return e.item}))},setSelectedItemById:function(e){d(null),c.forEach((function(t){t.item.id===e?(t.element.selected=!0,d(t.item)):t.element.selected=!1}))},getSelectedItem:function(){return l},clearSelection:function(){c.forEach((function(e){return e.element.selected=!1})),d(null)}}]},l=acquireVsCodeApi(),c=function(){function e(){var e=this;this.eventListeners=[],window.addEventListener("message",(function(t){e.eventListeners=e.eventListeners.filter((function(e){return e(t.data)}))}))}return e.prototype.getShaderDocuments=function(){var e=this;return l.postMessage({type:"getShaderDocuments"}),new Promise((function(t){e.eventListeners.push((function(e){return"getShaderDocuments"===e.type&&(t(e.payload.files),!0)}))}))},e}(),d=function(e,t,n){var r=document.createElement("button");return r.onclick=n,r.className=t,r.textContent=e,{element:r}},s=function(e,t,n){var r=document.createElement("div");r.className=t+" options-wrapper";var o=document.createElement("label");return o.className="options-label",o.textContent=n,e.className=e.className+" options-content",r.appendChild(o),r.appendChild(e),r},f=function(e,t,n,r,o){var i=document.createElement("div");i.className="edit-input-grid";for(var u=[],a=function(){return u.map((function(e){return e.value}))},l=0;l<n;l++){var c=document.createElement("div");c.className="edit-input-row";for(var d=function(n){var o=l*r+n,i=e[o],d=document.createElement("input"),s={element:d,value:i};d.className="edit-input",d.type="number",d.value=null==i?void 0:i.toString(),d.oninput=function(){u[o].value=Number(d.value),null==t||t(a())},u.push(s),c.appendChild(d)},s=0;s<r;s++)d(s);i.appendChild(c)}return[i,{setValues:function(e){return u.forEach((function(t,n){return t.value=e[n]}))},getValues:a,setReadonly:function(e){return u.forEach((function(t){return t.element.readOnly=e}))}}]},p=function(e){return f([0,0,0,0,0,0,0,0,0],e,3,3)},m=function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function u(e){try{l(r.next(e))}catch(e){i(e)}}function a(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(u,a)}l((r=r.apply(e,t||[])).next())}))},h=function(e,t){var n,r,o,i,u={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;u;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return u.label++,{value:i[1],done:!1};case 5:u.label++,r=i[1],i=[0];continue;case 7:i=u.ops.pop(),u.trys.pop();continue;default:if(!(o=u.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){u=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){u.label=i[1];break}if(6===i[0]&&u.label<o[1]){u.label=o[1],o=i;break}if(o&&u.label<o[2]){u.label=o[2],u.ops.push(i);break}o[2]&&u.ops.pop(),u.trys.pop();continue}i=t.call(e,u)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}},v=function(e,t){var n=document.createElement("div");return n.className=e,null==t||t.forEach((function(e){return n.appendChild(e)})),n};m(void 0,void 0,void 0,(function(){var e,t,n,o,i,u,l,m,y,g,b,w,C,S,E,x;return h(this,(function(h){var I,N,O,_,j,P,k;return e=new c,t=document.getElementById("viewer"),n=v("viewer-options"),o=v("viewer-shader-options"),t.appendChild(n),n.appendChild(v("viewer-shaders-title",[(I=r,N="",O=document.createElement("h3"),O.textContent=I,O.className=N+" section-title",{element:O}).element,d("Sync","viewer-refresh-button",(function(){e.getShaderDocuments().then((function(e){var t=e.map((function(e){return{id:e.filePath,display:e.fileName}}));l.setItems(t),g.setItems(t)}))})).element])),i=a((function(e){})),u=i[0],l=i[1],n.appendChild(s(u,"viewer-vertex-shader-selector","Vertex Shader")),m=a((function(e){})),y=m[0],g=m[1],n.appendChild(s(y,"viewer-fragment-shader-selector","Fragment Shader")),n.appendChild(o),o.appendChild(s(f([0,0,0],_,1,3)[0],"","u_color")),o.appendChild(s(function(e){return f([0,0,0,0],e,1,4)}()[0],"","u_diffuse")),b=p((function(e){return console.log(e)})),w=b[0],C=b[1],S=a((function(e){e&&("0"===e.id&&C.setReadonly(!1),"1"===e.id&&C.setReadonly(!0))}),"",{emptyItem:!1}),E=S[0],(x=S[1]).setItems([{id:"0",display:"Color picker"},{id:"1",display:"Custom"}]),x.setSelectedItemById("0"),o.appendChild(s(v("column-with-gap",[E,w]),"","dobre diffuse")),o.appendChild(s(v("column-with-gap",[a((function(e){}))[0],p((function(e){return console.log(e)}))[0]]),"","u_diffuse2")),o.appendChild(s(v("column-with-gap",[a((function(e){}))[0],p((function(e){return console.log(e)}))[0]]),"","u_diffuse2")),j=t,P=document.createElement("canvas"),k=P.getContext("2d"),j.appendChild(P),P.className="viewer-content",P.width=500,P.height=500,k.fillStyle="green",k.fillRect(150,150,200,450),[2]}))}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,