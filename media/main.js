!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var r=function(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var r=Array(e),o=0;for(t=0;t<n;t++)for(var i=arguments[t],a=0,l=i.length;a<l;a++,o++)r[o]=i[a];return r},o=function(e,t,n){var o=document.createElement("select");o.className=null!=t?t:"";var i=null,a=[],l=function(t){e(i=t)};o.onchange=function(){var e=a.find((function(e){return e.item.id===o.value}));e.item.id?l(e.item):l(null)};return[o,{setItems:function(e){o.innerHTML="",a.length=0,e.find((function(e){return e.id===(null==i?void 0:i.id)}))||l(null),r([{id:"",display:""}],e).forEach((function(e){var t=document.createElement("option");t.value=e.id,t.textContent=e.display,t.selected=e.id===(null==i?void 0:i.id),o.appendChild(t),a.push({element:t,item:e})}))},getItems:function(){return a.map((function(e){return e.item}))},setSelectedItemById:function(e){l(null),a.forEach((function(t){t.item.id===e?(t.element.selected=!0,l(t.item)):t.element.selected=!1}))},getSelectedItem:function(){return i},clearSelection:function(){a.forEach((function(e){return e.element.selected=!1})),l(null)}}]},i=acquireVsCodeApi(),a=function(){function e(){var e=this;this.eventListeners=[],window.addEventListener("message",(function(t){e.eventListeners=e.eventListeners.filter((function(e){return e(t.data)}))}))}return e.prototype.getShaderDocuments=function(){var e=this;return i.postMessage({type:"getShaderDocuments"}),new Promise((function(t){e.eventListeners.push((function(e){return"getShaderDocuments"===e.type&&(t(e.payload.files),!0)}))}))},e}(),l=function(e,t,n){var r=document.createElement("div");r.className=t+" options-wrapper";var o=document.createElement("label");return o.className="options-label",o.textContent=n,e.className=e.className+" options-content",r.appendChild(o),r.appendChild(e),r},u=function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}};(function(e,t,n,r){new(n||(n=Promise))((function(o,i){function a(e){try{u(r.next(e))}catch(e){i(e)}}function l(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,l)}u((r=r.apply(e,t||[])).next())}))})(void 0,void 0,void 0,(function(){var e,t,n,r,i,c,s,d,f,p,m,v;return u(this,(function(u){var h,y;return e=new a,t=document.getElementById("viewer"),n=document.createElement("div"),h="viewer-shader-options",(y=document.createElement("div")).className=h,r=y,n.appendChild(r),n.className="viewer-options",i=o((function(e){})),c=i[0],s=i[1],n.appendChild(l(c,"viewer-vertex-shader-selector","Vertex Shader")),d=o((function(e){})),f=d[0],p=d[1],n.appendChild(l(f,"viewer-fragment-shader-selector","Fragment Shader")),n.appendChild(function(e,t){var n=document.createElement("h3");return n.textContent=e,n.className=t+" section-title",{element:n}}("SHADERS","viewer-shaders-title").element),n.appendChild(function(e,t,n){var r=document.createElement("button");return r.onclick=n,r.className=t,r.textContent=e,{element:r}}("â†»","viewer-refresh-button",(function(){e.getShaderDocuments().then((function(e){var t=e.map((function(e){return{id:e.filePath,display:e.fileName}}));s.setItems(t),p.setItems(t)}))})).element),t.appendChild(n),(m=document.createElement("canvas")).className="viewer-content",m.width=500,m.height=500,t.appendChild(m),(v=m.getContext("2d")).fillStyle="green",v.fillRect(150,150,200,450),[2]}))}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,